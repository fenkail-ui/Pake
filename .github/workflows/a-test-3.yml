name: a test 3
on:
  workflow_dispatch:
    inputs:
      url:
        description: "[网址,必须去掉https://和结尾的/]"
        required: true
      name:
        description: "[名称]"
        required: true
      url1:
        description: "[网址,必须去掉https://和结尾的/]"
        required: false
      name1:
        description: "[名称]"
        required: false
      url2:
        description: "[网址,必须去掉https://和结尾的/]"
        required: false
      name2:
        description: "[名称]"
        required: false
      height:
        description: "[高度, 选填]"
        required: false
        default: "780"
      width:
        description: "[宽度, 选填]"
        required: false
        default: "1200"
      transparent:
        description: "[透明无标题栏, 仅mac适用]"
        required: false
        type: boolean
        default: true
      
jobs:
  build:
    name: build
    strategy:
      matrix:
          os: [windows-latest, macos-latest]
      #fail-fast: false
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: install node
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: Install Rust for macos-latest
      if: matrix.os == 'macos-latest'
      uses: actions-rs/toolchain@master
      with:
        toolchain: stable
        profile: minimal
        override: true
        target: x86_64-apple-darwin

    - name: 为windows-latest安装Rust
      if: matrix.os  == 'windows-latest'
      uses: actions-rs/toolchain@master
      with:
        toolchain: stable-x86_64-msvc
        profile: minimal
        override: true
        target: x86_64-pc-windows-msvc
      
    - name: 为windows安装必要软件
      if: matrix.os  == 'windows-latest'
      run: |
        choco install wget curl
        choco install imagemagick -y
          refreshenv

    - name: install pake-cli local
      shell: bash
      run: |
        echo "install pake on local"
        #npm install pake-cli
        #npm install pake-cli
        #npm list -g pake-cli --depth=0
        #npm fund  https://github.com/fenkail-ui/pake-bakup.git
        npm install git+https:github.com/fenkail-ui/pake-bakup.git
        #find {{/Users/runner/hostedtoolcache/node/18.15.0/x64/lib/pake-cli/}} \( -name "package.json" -o -name "cli.js" \) -type f -exec sed -i '' 's/universal-apple-darwin/aarch64-apple-darwin/g' {} +
        
    - name: windows下替换图标
      if:  inputs.url != '' && matrix.os == 'windows-latest' 
      run: | 
        npm list -g --depth=0 | Select-String pake-cli
        cd D:\a\Pake\Pake\node_modules\pake-cli\src-tauri\png\
        curl -o icon_512.png -f -L "https://api.faviconkit.com/${{ inputs.url }}/512"
        curl -o icon_256.png -f -L "https://api.faviconkit.com/${{ inputs.url }}/256" 
        curl -o icon_32.png -f -L "https://api.faviconkit.com/${{ inputs.url }}/32"
        magick convert icon_256.png icon_256.ico
        magick convert icon_32.png icon_32.ico

    - name: rust cache restore
      uses: actions/cache/restore@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          node_modules/pake-cli/src-tauri/target/
        key: ${{ inputs.platform }}-cargo-${{ hashFiles('node_modules/pake-cli/src-tauri/Cargo.lock') }}

    - name: build 1 with pake-cli apple x86
      shell: pwsh
      if: inputs.url != '' && matrix.os == 'macos-latest'
      run: |
        pwsh ./script/build_with_pake_cli.ps1
      env:
        URL: ${{ inputs.url }}
        NAME: ${{ inputs.name }}
        ICON: https://api.faviconkit.com/${{ inputs.url }}/144
        HEIGHT: ${{ inputs.height }}
        WIDTH: ${{ inputs.width }}
        TRANSPARENT: ${{ inputs.transparent }}
        FULLSCREEN: ${{ inputs.fullscreen }}
        RESIZE: true
        MULTI_ARCH: false
        TARGETS: ${{ inputs.targets }}
      
    - name: build 1 with pake-cli in windows
      if:  inputs.url != '' && matrix.os == 'windows-latest'
      shell: pwsh
      run: |
        pwsh ./script/build_with_pake_cli.ps1
      env:
        URL: ${{ inputs.url }}
        NAME: ${{ inputs.name }}
        ICON: ${{ inputs.icon }}
        HEIGHT: ${{ inputs.height }}
        WIDTH: ${{ inputs.width }}
        TRANSPARENT: false
        FULLSCREEN: ${{ inputs.fullscreen }}
        RESIZE: true
        MULTI_ARCH: ${{ inputs.multi_arch }}
        TARGETS: ${{ inputs.targets }}

    - name: build 2 with pake-cli apple x86
      shell: pwsh
      if: inputs.url1 != '' && matrix.os == 'macos-latest'
      run: |
        pwsh ./script/build_with_pake_cli.ps1
      env:
        URL: ${{ inputs.url1 }}
        NAME: ${{ inputs.name1 }}
        ICON: https://api.faviconkit.com/${{ inputs.url1 }}/144
        HEIGHT: ${{ inputs.height }}
        WIDTH: ${{ inputs.width }}
        TRANSPARENT: ${{ inputs.transparent }}
        FULLSCREEN: ${{ inputs.fullscreen }}
        RESIZE: true
        MULTI_ARCH: false
        TARGETS: ${{ inputs.targets }}

    - name: windows下替换图标2
      if:  inputs.url1 != '' && matrix.os == 'windows-latest' 
      run: | 
        npm list -g --depth=0 | Select-String pake-cli
        cd D:\a\Pake\Pake\node_modules\pake-cli\src-tauri\png\
        curl -o icon_512.png -f -L "https://api.faviconkit.com/${{ inputs.url1 }}/512"
        curl -o icon_256.png -f -L "https://api.faviconkit.com/${{ inputs.url1 }}/256" 
        curl -o icon_32.png -f -L "https://api.faviconkit.com/${{ inputs.url1 }}/32"
        magick convert icon_256.png icon_256.ico
        magick convert icon_32.png icon_32.ico
        
    - name: build 2 with pake-cli in windows
      if:  inputs.url1 != '' && matrix.os == 'windows-latest'
      shell: pwsh
      run: |
        pwsh ./script/build_with_pake_cli.ps1
      env:
        URL: ${{ inputs.url1 }}
        NAME: ${{ inputs.name1 }}
        ICON: ${{ inputs.icon }}
        HEIGHT: ${{ inputs.height }}
        WIDTH: ${{ inputs.width }}
        TRANSPARENT: false
        FULLSCREEN: ${{ inputs.fullscreen }}
        RESIZE: true
        MULTI_ARCH: ${{ inputs.multi_arch }}
        TARGETS: ${{ inputs.targets }}
    
    - name: build 3 with pake-cli apple x86
      shell: pwsh
      if: inputs.url1 != '' && matrix.os == 'macos-latest'
      run: |
        pwsh ./script/build_with_pake_cli.ps1
      env:
        URL: ${{ inputs.url2 }}
        NAME: ${{ inputs.name2 }}
        ICON: https://api.faviconkit.com/${{ inputs.url2 }}/144
        HEIGHT: ${{ inputs.height }}
        WIDTH: ${{ inputs.width }}
        TRANSPARENT: ${{ inputs.transparent }}
        FULLSCREEN: ${{ inputs.fullscreen }}
        RESIZE: true
        MULTI_ARCH: false
        TARGETS: ${{ inputs.targets }}

    - name: windows下替换图标3
      if:  inputs.url2 != '' && matrix.os == 'windows-latest' 
      run: | 
        npm list -g --depth=0 | Select-String pake-cli
        cd D:\a\Pake\Pake\node_modules\pake-cli\src-tauri\png\
        curl -o icon_512.png -f -L "https://api.faviconkit.com/${{ inputs.url2 }}/512"
        curl -o icon_256.png -f -L "https://api.faviconkit.com/${{ inputs.url2 }}/256" 
        curl -o icon_32.png -f -L "https://api.faviconkit.com/${{ inputs.url2 }}/32"
        magick convert icon_256.png icon_256.ico
        magick convert icon_32.png icon_32.ico

    - name: build 3 with pake-cli in windows
      if:  inputs.url2 != '' && matrix.os == 'windows-latest'
      shell: pwsh
      run: |
        pwsh ./script/build_with_pake_cli.ps1
      env:
        URL: ${{ inputs.url2 }}
        NAME: ${{ inputs.name2 }}
        ICON: ${{ inputs.icon }}
        HEIGHT: ${{ inputs.height }}
        WIDTH: ${{ inputs.width }}
        TRANSPARENT: false
        FULLSCREEN: ${{ inputs.fullscreen }}
        RESIZE: true
        MULTI_ARCH: ${{ inputs.multi_arch }}
        TARGETS: ${{ inputs.targets }}    
   
    - name: build 1 with pake-cli apple arm
      shell: pwsh
      if: inputs.url != '' && matrix.os == 'macos-latest'
      run: |
        pwsh ./script/build_with_pake_cli.ps1
      env:
        URL: ${{ inputs.url }}
        NAME: ${{ inputs.name }}
        ICON: https://api.faviconkit.com/${{ inputs.url }}/144
        HEIGHT: ${{ inputs.height }}
        WIDTH: ${{ inputs.width }}
        TRANSPARENT: ${{ inputs.transparent }}
        FULLSCREEN: ${{ inputs.fullscreen }}
        RESIZE: true
        MULTI_ARCH: true
        TARGETS: ${{ inputs.targets }}
      
    - name: mv file 1
      if: inputs.url != '' && matrix.os == 'macos-latest'
      run: |
         cp /Users/runner/work/Pake/Pake/node_modules/pake-cli/src-tauri/target/aarch64-apple-darwin/release/bundle/dmg/*.dmg /Users/runner/work/Pake/Pake/node_modules/pake-cli/output/
   
        
    - name: build 2 with pake-cli apple arm
      shell: pwsh
      if: inputs.url1 != '' && matrix.os == 'macos-latest'
      run: |
        pwsh ./script/build_with_pake_cli.ps1
      env:
        URL: ${{ inputs.url1 }}
        NAME: ${{ inputs.name1 }}
        ICON: https://api.faviconkit.com/${{ inputs.url1 }}/144
        HEIGHT: ${{ inputs.height }}
        WIDTH: ${{ inputs.width }}
        TRANSPARENT: ${{ inputs.transparent }}
        FULLSCREEN: ${{ inputs.fullscreen }}
        RESIZE: true
        MULTI_ARCH: true
        TARGETS: ${{ inputs.targets }}
        
    - name: mv file 2
      if: inputs.url1 != '' && matrix.os == 'macos-latest'
      run: |
         cp /Users/runner/work/Pake/Pake/node_modules/pake-cli/src-tauri/target/aarch64-apple-darwin/release/bundle/dmg/*.dmg /Users/runner/work/Pake/Pake/node_modules/pake-cli/output/
   
    - name: build 3 with pake-cli apple arm
      shell: pwsh
      if: inputs.url1 != '' && matrix.os == 'macos-latest'
      run: |
        pwsh ./script/build_with_pake_cli.ps1
      env:
        URL: ${{ inputs.url2 }}
        NAME: ${{ inputs.name2 }}
        ICON: https://api.faviconkit.com/${{ inputs.url2 }}/144
        HEIGHT: ${{ inputs.height }}
        WIDTH: ${{ inputs.width }}
        TRANSPARENT: ${{ inputs.transparent }}
        FULLSCREEN: ${{ inputs.fullscreen }}
        RESIZE: true
        MULTI_ARCH: true
        TARGETS: ${{ inputs.targets }}
        
    - name: mv file 3
      if: inputs.url2 != '' && matrix.os == 'macos-latest'
      run: |
         cp /Users/runner/work/Pake/Pake/node_modules/pake-cli/src-tauri/target/aarch64-apple-darwin/release/bundle/dmg/*.dmg /Users/runner/work/Pake/Pake/node_modules/pake-cli/output/
   
    - name: renname1
      if: matrix.os == 'macos-latest' && inputs.url != ''
      run: |
        cd /Users/runner/work/Pake/Pake/node_modules/pake-cli/output/
        mv ${{ inputs.name }}.dmg ${{ inputs.name }}_1.3.0_x64.dmg
    - name: renname2
      if: matrix.os == 'macos-latest' && inputs.url1 != ''
      run: |
        cd /Users/runner/work/Pake/Pake/node_modules/pake-cli/output/
          mv ${{ inputs.name1 }}.dmg ${{ inputs.name1 }}_1.3.0_x64.dmg
    - name: renname3
      if: matrix.os == 'macos-latest' && inputs.url2 != ''
      run: |
        cd /Users/runner/work/Pake/Pake/node_modules/pake-cli/output/
          mv ${{ inputs.name2 }}.dmg ${{ inputs.name2 }}_1.3.0_x64.dmg
    
    - name: Upload files
      # arg info: https://github.com/ncipollo/release-action#release-action
      uses: ncipollo/release-action@v1
      with:
        allowUpdates: true
        prerelease: false
        artifacts: "node_modules/pake-cli/output/*.*"
        tag: 1.3.1
        token: ${{ secrets.GITHUB_TOKEN }}
        #GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    
   
    - name: Upload archive
      uses: actions/upload-artifact@v3
      with:
        name: ${{ inputs.name }}+${{ inputs.name1 }}+${{ inputs.name2 }}-macos-latest.zip
        path: node_modules/pake-cli/output/*
        retention-days: 3

    - name: rust cache store
      uses: actions/cache/save@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          node_modules/pake-cli/src-tauri/target/
        key: ${{ matrix.os }}-cargo-${{ hashFiles('node_modules/pake-cli/src-tauri/Cargo.lock') }}

    - name: Delete workflow runs
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 14
        keep_minimum_runs: 3
