name: a test
on:
  workflow_dispatch:
    inputs:
      url:
        description: "[ÁΩëÂùÄ,ÂøÖÈ°ªÂéªÊéâhttps://ÂíåÁªìÂ∞æÁöÑ/]"
        required: true
      name:
        description: "[ÂêçÁß∞]"
        required: true
      url1:
        description: "[ÁΩëÂùÄ,ÂøÖÈ°ªÂéªÊéâhttps://ÂíåÁªìÂ∞æÁöÑ/]"
        required: false
      name1:
        description: "[ÂêçÁß∞]"
        required: false
      url2:
        description: "[ÁΩëÂùÄ,ÂøÖÈ°ªÂéªÊéâhttps://ÂíåÁªìÂ∞æÁöÑ/]"
        required: false
      name2:
        description: "[ÂêçÁß∞]"
        required: false
        
     # icon:
      #  description: "[ÂõæÊ†á, ÂèØÈÄâÔºåÈªòËÆ§‰ΩøÁî®ÁΩëÁ´ôÁöÑÂõæÊ†á]"
      #  required: false
      height:
        description: "[È´òÂ∫¶, ÈÄâÂ°´]"
        required: false
        default: "780"
      width:
        description: "[ÂÆΩÂ∫¶, ÈÄâÂ°´]"
        required: false
        default: "1200"
      transparent:
        description: "[ÈÄèÊòéÊó†Ê†áÈ¢òÊ†è, macÊõ¥ÈÄÇÁî®]"
        required: false
        type: boolean
        default: true
      # fullscreen:
      #   description: "[FullScreen, Optional]"
      #   required: false
      #   type: boolean
      #   default: false
      multi_arch:
        description: "[armÊû∂ÊûÑ, ÂèØÈÄâÔºåÂèñÊ∂à‰∏∫x86]"
        required: false
        type: boolean
        default: true
      


jobs:
  build:
    name: macos-latest
    runs-on: macos-latest
    strategy:
      fail-fast: false

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: install node
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: Install Rust for macos-latest
      if: inputs.platform == 'macos-latest'
      uses: actions-rs/toolchain@master
      with:
        toolchain: stable
        profile: minimal
        override: true
        target: x86_64-apple-darwin

    - name: install pake-cli local
      shell: bash
      run: |
        echo "install pake on local"
        #npm install pake-cli
        #npm install pake-cli
        #npm list -g pake-cli --depth=0
        #npm fund  https://github.com/fenkail-ui/pake-bakup.git
        npm install git+https:github.com/fenkail-ui/pake-bakup.git
        #find {{/Users/runner/hostedtoolcache/node/18.15.0/x64/lib/pake-cli/}} \( -name "package.json" -o -name "cli.js" \) -type f -exec sed -i '' 's/universal-apple-darwin/aarch64-apple-darwin/g' {} +
      
    - name: rust cache restore
      uses: actions/cache/restore@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          node_modules/pake-cli/src-tauri/target/
        key: ${{ inputs.platform }}-cargo-${{ hashFiles('node_modules/pake-cli/src-tauri/Cargo.lock') }}

    - name: build 1 with pake-cli
      shell: pwsh
      if: inputs.url != ''
      run: |
        pwsh ./script/build_with_pake_cli.ps1
      env:
        URL: ${{ inputs.url }}
        NAME: ${{ inputs.name }}
        ICON: https://api.faviconkit.com/${{ inputs.url }}/144
        HEIGHT: ${{ inputs.height }}
        WIDTH: ${{ inputs.width }}
        TRANSPARENT: ${{ inputs.transparent }}
        FULLSCREEN: ${{ inputs.fullscreen }}
        RESIZE: true
        MULTI_ARCH: ${{ inputs.multi_arch }}
        TARGETS: ${{ inputs.targets }}
      
    - name: mv file 1
      if: inputs.multi_arch
      run: |
         cp /Users/runner/work/Pake/Pake/node_modules/pake-cli/src-tauri/target/aarch64-apple-darwin/release/bundle/dmg/*.dmg /Users/runner/work/Pake/Pake/node_modules/pake-cli/output
   
        
    - name: build 2 with pake-cli 
      shell: pwsh
      if: inputs.url1 != ''
      run: |
        pwsh ./script/build_with_pake_cli.ps1
      env:
        URL: ${{ inputs.url1 }}
        NAME: ${{ inputs.name1 }}
        ICON: https://api.faviconkit.com/${{ inputs.url1 }}/144
        HEIGHT: ${{ inputs.height }}
        WIDTH: ${{ inputs.width }}
        TRANSPARENT: ${{ inputs.transparent }}
        FULLSCREEN: ${{ inputs.fullscreen }}
        RESIZE: true
        MULTI_ARCH: ${{ inputs.multi_arch }}
        TARGETS: ${{ inputs.targets }}
        
    - name: mv file 2
      if: inputs.multi_arch && inputs.url1
      run: |
         cp /Users/runner/work/Pake/Pake/node_modules/pake-cli/src-tauri/target/aarch64-apple-darwin/release/bundle/dmg/*.dmg /Users/runner/work/Pake/Pake/node_modules/pake-cli/output
   
    - name: build 3 with pake-cli 
      shell: pwsh
      if: inputs.url1 != ''
      run: |
        pwsh ./script/build_with_pake_cli.ps1
      env:
        URL: ${{ inputs.url2 }}
        NAME: ${{ inputs.name2 }}
        ICON: https://api.faviconkit.com/${{ inputs.url2 }}/144
        HEIGHT: ${{ inputs.height }}
        WIDTH: ${{ inputs.width }}
        TRANSPARENT: ${{ inputs.transparent }}
        FULLSCREEN: ${{ inputs.fullscreen }}
        RESIZE: true
        MULTI_ARCH: ${{ inputs.multi_arch }}
        TARGETS: ${{ inputs.targets }}
        
    - name: mv file 3
      if: inputs.multi_arch && inputs.url2
      run: |
         cp /Users/runner/work/Pake/Pake/node_modules/pake-cli/src-tauri/target/aarch64-apple-darwin/release/bundle/dmg/*.dmg /Users/runner/work/Pake/Pake/node_modules/pake-cli/output
   
   
        
    - name: ‰∏ä‰º†Âõ∫‰ª∂Âà∞NNÁΩëÁõò
      id: cowtransfer
      #if: steps.organize.outputs.status == 'success' && env.UPLOAD_COWTRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer cow --block 2621440 -s -p 64 --no-progress /Users/runner/work/Pake/Pake/node_modules/pake-cli/output/*.dmg 2>&1 | tee cowtransfer.log
        echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"
        echo "::set-output name=url::$(cat cowtransfer.log | grep https | cut -f3 -d" ")"
        
    - name: ÂàõÂª∫releaseÊ†áÁ≠æ
      id: tag
      #if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      run: |
        echo "::set-output name=release_tag::$(date +"%Y.%m.%d-%H%M")"
        touch release.txt
        echo "[Ê∫êÁ†Å]( )" >> release.txt
        echo "Áî±Ë°∑ÊÑüË∞¢ÊâÄÊúâÊó†ÁßÅÂ•âÁåÆÁöÑÂ§ß‰Ω¨‰ª¨" >> release.txt
        echo "üì• Âõ∫‰ª∂‰∏ãËΩΩ" >> release.txt
        [ $UPLOAD_COWTRANSFER = true ] && echo "üîó [ÂõΩÂÜÖNNÁΩëÁõò](${{ steps.cowtransfer.outputs.url }})" >> release.txt
        [ $UPLOAD_WETRANSFER = true ] && echo "üîó [ÂõΩÂ§ñWTÁΩëÁõò](${{ steps.wetransfer.outputs.url }})" >> release.txt
        echo "::set-output name=status::success"
    - name: ÂèëÂ∏ÉËá≥release
      uses: softprops/action-gh-release@v1
    #  if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
      with:
        name: ${{ inputs.name }}+${{ inputs.name1 }}+${{ inputs.name2 }}
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: /Users/runner/work/Pake/Pake/node_modules/pake-cli/output/* 

    - name: Âà†Èô§ÊóßÁöÑReleases
      uses: dev-drprasad/delete-older-releases@v0.1.0
     # if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        keep_latest: 9
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Upload archive
      uses: actions/upload-artifact@v3
      with:
        name: ${{ inputs.name }}+${{ inputs.name1 }}+${{ inputs.name2 }}-macos-latest.zip
        path: node_modules/pake-cli/output/*
        retention-days: 3

    - name: rust cache store
      uses: actions/cache/save@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          node_modules/pake-cli/src-tauri/target/
        key: ${{ inputs.platform }}-cargo-${{ hashFiles('node_modules/pake-cli/src-tauri/Cargo.lock') }}
